structure(list(id = c("s300000520_55fb1f6ee4b0995215ed4d74", 
"s300000520_574d91ffe4b0d4ff6be36a84", "s300000520_5751a398e4b02e29387bcc9d", 
"s300000520_57c9885ce4b09287dc3739f0", "s300000520_57d93968e4b0b38762ba2fcf", 
"s300000520_57f0f3dee4b0726a99d2ebeb", "s300000520_587e0e7fe4b084a9fd149deb", 
"s300000520_58a18358e4b08939f9d6ed34", "s300000520_58b03e3ce4b0995d31eda288", 
"s300000520_58b58212e4b06303eab78eda", "s300000520_58bebf24e4b046998bf92cac"
), name = c("Exclude monitoring", "Corp R&D SD promo", "AbbVie", 
"SC Anonymous IP Authentication", "SC Registered Users", "EF 1 minute content", 
"Export is 5000", "Last week", "DMMM:EV: Organic Traffic", "DMMM:SD:Entry page sciencedirect", 
"MD: user access type = md:guest"), description = c("", "", "", 
"All Scopus users whose user access type is Anonymous IP.", "Registered users active on Scopus", 
"Visits where content was viewed and visit length 30 sec - 1 minute; visit depth > 1", 
"", "", "", "", ""), reportSuiteID = c("elsevier-ps-prod", "elsevier-ec-prod", 
"elsevier-rx-prod", "elsevier-sc-prod", "vrs_elsevi3_rapglobalprod2016", 
"elsevier-ck-prod", "elsevier-rx-prod", "elsevier-rx-prod", "elsevier-ec-prod", 
"elsevier-ec-prod", "elsevier-md-prod"), owner = c("p.anokhin", 
"p.jonas", "h.devereaux", "p.burrafato", "p.burrafato", "a.brown", 
"m.stamm", "g.louter", "f.neighbour", "f.neighbour", "n.zazworka"
), definition = list(structure(list(container = structure(list(
    type = "hits", rules = structure(list(name = "Domain", element = "filtereddomain", 
        operator = "not_contains", value = "amazonaws.com"), .Names = c("name", 
    "element", "operator", "value"), class = "data.frame", row.names = 1L)), .Names = c("type", 
"rules"))), .Names = "container"), structure(list(container = structure(list(
    type = "hits", rules = structure(list(name = "Page URL [v10] (evar10)", 
        element = "evar10", operator = "contains", value = "/promo/rd-solutions/sd"), .Names = c("name", 
    "element", "operator", "value"), class = "data.frame", row.names = 1L)), .Names = c("type", 
"rules"))), .Names = "container"), structure(list(container = structure(list(
    type = "hits", rules = structure(list(name = "Account Name [v7] (evar7)", 
        element = "evar7", operator = "contains", value = "AbbVie"), .Names = c("name", 
    "element", "operator", "value"), class = "data.frame", row.names = 1L)), .Names = c("type", 
"rules"))), .Names = "container"), structure(list(container = structure(list(
    type = "hits", rules = structure(list(name = "User Access Type [v33] (evar33)", 
        element = "evar33", operator = "equals", value = "ae:anon_ip"), .Names = c("name", 
    "element", "operator", "value"), class = "data.frame", row.names = 1L)), .Names = c("type", 
"rules"))), .Names = "container"), structure(list(container = structure(list(
    type = "visitors", operator = "and", rules = structure(list(
        container = structure(list(name = c("ROS Registered Visitors", 
        NA), type = c("visitors", NA), rules = list(structure(list(
            container = structure(list(type = "hits", operator = "or", 
                rules = list(structure(list(name = c("User Access Type [v33]", 
                "User Access Type [v33]", "User Access Type [v33]", 
                "User Access Type [v33]"), element = c("evar33", 
                "evar33", "evar33", "evar33"), operator = c("contains", 
                "contains", "contains", "equals"), value = c("reg_", 
                "reg-", "individual", "md:registered-user")), .Names = c("name", 
                "element", "operator", "value"), class = "data.frame", row.names = c(NA, 
                4L)))), .Names = c("type", "operator", "rules"
            ), class = "data.frame", row.names = 1L)), .Names = "container", class = "data.frame", row.names = 1L), 
            NULL)), .Names = c("name", "type", "rules"), class = "data.frame", row.names = 1:2), 
        name = c(NA, "Elsevier Product Name [v4]"), element = c(NA, 
        "evar4"), classification = c(NA, "Elsevier Product Name [v4]"
        ), operator = c(NA, "equals"), value = c(NA, "Scopus"
        )), .Names = c("container", "name", "element", "classification", 
    "operator", "value"), class = "data.frame", row.names = 1:2)), .Names = c("type", 
"operator", "rules"))), .Names = "container"), structure(list(
    container = structure(list(type = "visits", operator = "and", 
        rules = structure(list(name = c("Content Views [e5]", 
        "Time Spent per Visit - Granular", "Time Spent per Visit - Granular", 
        "Visit Depth"), metric = c("event5", NA, NA, NA), operator = c("greater_than_or_equals", 
        "greater_than", "less_than_or_equals", "greater_than"
        ), value = c(1L, 30L, 60L, 1L), element = c(NA, "sitetime", 
        "sitetime", "pathlength")), .Names = c("name", "metric", 
        "operator", "value", "element"), class = "data.frame", row.names = c(NA, 
        4L))), .Names = c("type", "operator", "rules"))), .Names = "container"), 
    structure(list(container = structure(list(type = "hits", 
        rules = structure(list(container = structure(list(name = "Export 4000", 
            type = "hits", rules = list(structure(list(name = "# of Rows Exported [v69]", 
                element = "evar69", operator = "equals", value = "5000"), .Names = c("name", 
            "element", "operator", "value"), class = "data.frame", row.names = 1L))), .Names = c("name", 
        "type", "rules"), class = "data.frame", row.names = 1L)), .Names = "container", class = "data.frame", row.names = 1L)), .Names = c("type", 
    "rules"))), .Names = "container"), "failed converting segment definition: failed converting container rule: datetime-within", 
    structure(list(container = structure(list(type = "hits", 
        operator = "and", rules = structure(list(name = c("Entry Page", 
        NA), element = c("entrypage", NA), operator = c("contains", 
        NA), value = c("ec:solutions:engineering-village", NA
        ), container = structure(list(type = c(NA, "hits"), rules = list(
            NULL, structure(list(name = "Last Touch Channel", 
                element = "lasttouchchannel", operator = "equals", 
                value = "Natural Search"), .Names = c("name", 
            "element", "operator", "value"), class = "data.frame", row.names = 1L))), .Names = c("type", 
        "rules"), class = "data.frame", row.names = 1:2)), .Names = c("name", 
        "element", "operator", "value", "container"), class = "data.frame", row.names = 1:2)), .Names = c("type", 
    "operator", "rules"))), .Names = "container"), structure(list(
        container = structure(list(type = "hits", rules = structure(list(
            name = "Entry Page", element = "entrypage", operator = "contains", 
            value = "ec:solutions:sciencedirect"), .Names = c("name", 
        "element", "operator", "value"), class = "data.frame", row.names = 1L)), .Names = c("type", 
        "rules"))), .Names = "container"), structure(list(container = structure(list(
        type = "hits", rules = structure(list(name = "User Access Type [v33]", 
            element = "evar33", operator = "equals", value = "md:guest"), .Names = c("name", 
        "element", "operator", "value"), class = "data.frame", row.names = 1L)), .Names = c("type", 
    "rules"))), .Names = "container")), compatibility = c("reportsAndAnalytics, adHocAnalysis, dataWarehouse", 
"reportsAndAnalytics, adHocAnalysis, dataWarehouse", "reportsAndAnalytics, adHocAnalysis, dataWarehouse", 
"reportsAndAnalytics, adHocAnalysis, dataWarehouse", "reportsAndAnalytics, adHocAnalysis, dataWarehouse", 
"reportsAndAnalytics, adHocAnalysis, dataWarehouse", "reportsAndAnalytics, adHocAnalysis, dataWarehouse", 
"reportsAndAnalytics, adHocAnalysis", "reportsAndAnalytics, adHocAnalysis, dataWarehouse", 
"reportsAndAnalytics, adHocAnalysis, dataWarehouse", "reportsAndAnalytics, adHocAnalysis, dataWarehouse"
), shares = list(structure(list(type = c("user", "user", "user", 
"user"), name = c("d.arndt", "m.campbell", "a.ewoo", "h.cao")), .Names = c("type", 
"name"), class = "data.frame", row.names = c(NA, 4L)), structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(type = c("user", "user"), name = c("m.neumeier", 
    "t.noonan")), .Names = c("type", "name"), class = "data.frame", row.names = 1:2), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame"), 
    structure(list(), .Names = character(0), row.names = integer(0), class = "data.frame")), 
    favorite = c(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
    FALSE, FALSE, FALSE, FALSE), tags = c(NA, NA, NA, NA, NA, 
    "CS EF", NA, NA, "DMMM:EngineeringVillage", "DMMM:ScienceDirect", 
    NA), modified = c("2016-08-04 12:10:33", "2016-09-06 03:43:10", 
    "2016-06-03 08:34:49", "2016-09-02 07:13:45", "2017-02-23 06:32:34", 
    "2016-10-02 04:49:44", "2017-01-17 04:30:55", "2017-02-13 01:59:39", 
    "2017-02-24 06:12:55", "2017-02-28 05:58:42", "2017-03-07 06:09:40"
    )), .Names = c("id", "name", "description", "reportSuiteID", 
"owner", "definition", "compatibility", "shares", "favorite", 
"tags", "modified"), row.names = c(NA, 11L), class = "data.frame")
