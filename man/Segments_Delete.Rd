% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Segments_Delete.R
\name{Segments_Delete}
\alias{Segments_Delete}
\title{Delete one or more segments by segment id, with checks}
\usage{
Segments_Delete(id, check_only = TRUE)
}
\arguments{
\item{id}{A character vector of segment IDs to delete}

\item{check_only}{If \code{TRUE} (default), will not execute the \code{DELETE} action
but instead returns a list of (\code{quoted}) expressions that must be evaluated to 
complete the deletion(s).}
}
\value{
If called with \code{check_only = TRUE} (default), a \code{list} of length 2, 
with named elements:

\enumerate{
\item \code{checks}: A data.frame containing segment information 
      (\code{id,name,description,reportSuiteID,owner,tags,modified}). The 
      number of rows corresponds to the length of \emph{id}.
 \item \code{eval_to_delete}: A list of unevaluated expressions, each element
       containing an unevaluated (\code{quoted}) expression, one for each
       \emph{id}. Evaluate element-wise with \code{eval}.
}

If called with \code{check_only = FALSE}, a \code{data.frame} containing the 
same information as listed above (for \code{checks}), with an additional column
named \code{DELETED}, where values of \code{TRUE} denote which \emph{id}s have
been successfully deleted.
}
\description{
For a vector of segments, check, and possibly delete segment(s), with output report
}
\details{
This function calls the \emph{Segments.Delete} method, and attempts to make deletion
of one or more segments safer/more robust by adding two checks:

First, this function calls \emph{Segments.Get}, via \code{\link{Segments_Get}}, to 
provide a report and also to run a live check that the requested segments all exist, and if
not, throws an error. 

Second, this function does \strong{NOT}, by default, actually execute the delete action, 
but rather returns a \code{list} containing the aforementioned report, along with a list
of unevaluated expressions. See \code{Examples}.

The workflow can be streamlined by setting \emph{check_only} to \code{FALSE}, in which case
deletion is a single-step process (and a report is still output).
}
\section{Access Privileges}{
 
This function calls an Adobe Analytics method that requires administrative/elevated privileges
}

\examples{
\dontrun{
# Default call and return:
yes_check <- Delete_Segment(valid_targs[1:2], check_only = TRUE)
# to execute the deletion:
lapply(yes_check$eval_to_delete, eval)

# If check_only = FALSE, single-step:
no_check  <- Delete_Segment(valid_targs[1:2], check_only = FALSE)
}
}
