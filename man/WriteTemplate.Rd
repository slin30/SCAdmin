% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WriteTemplate.R
\name{WriteTemplate}
\alias{WriteTemplate}
\title{Write out a SAINT import template}
\usage{
WriteTemplate(x, outfile = NULL, wb = TRUE)
}
\arguments{
\item{x}{(Required) A length-1 character containing the template to write out. See details}

\item{outfile}{(Optional) A length-1 file path; if not specified, will write out to a temporary file}

\item{wb}{(Optional) Use Windows Binary line termination format? Defaults to \code{TRUE}.}
}
\value{
A tab-delimited file in the location specified by \emph{outfile}, or if not specified, a temporary
file within a temporary directory. Additionally, a console \emph{message} denoting the file name and
directory.
}
\description{
For a valid call return from GetTemplate, write out a valid text file for downstream use
}
\details{
This function will operate on a single input and, if provided, write the input to the location
specified by \emph{outfile}. For writing out more than one template, call this with e.g. \code{Map} and 
pass in lists of templates and (optionally) \emph{outfile}s-- of equal length.

The expected typical input is a valid return from \code{\link{Classifications.GetTemplate}}, passed in
row-wise if >1 row. Alternatively, call this function with a call to \code{Map} on the \emph{template}
field. See examples
}
\examples{
\dontrun{
# On a single-row return
# First get a template
single_template <- GetTemplate("my_rsid", "my_element")
# Then write it out
WriteTemplate(single_template)

# On a multi-row return
multi_template <- GetTemplate(c("my_rsid_1", "my_rsid_2"), "my_element")
my_files <- c("./rsid_1.tab", "./rsid_2") # file extension will automatically be stripped and output as '.tab'
Map(WriteTemplate, multi_template[["template"]], my_files)
}
}
\seealso{
Other Classifications methods: \code{\link{Classifications_GetElements}},
  \code{\link{Classifications_GetTemplate}}
}
