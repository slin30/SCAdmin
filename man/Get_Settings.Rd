% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Get_Settings.R
\name{Get_Settings}
\alias{Get_Settings}
\title{Get configuration summary for one or more report suite}
\usage{
Get_Settings(rsids, locale = "en_US")
}
\arguments{
\item{rsids}{(required) A \code{character} vector of report suite IDs. Lists will be collapsed to atomic}

\item{locale}{(required) A \code{character} vector of length 1 denoting the locale. Defaults to \code{en_US}.
See details for other allowed locales.}
}
\value{
A nested \code{list}, with one row per report suite requested
}
\description{
Direct call to ReportSuite.GetSettings API 1.4 method
}
\details{
Allowed locales are currently defined as:

\itemize{
    \item en_US
    \item de_DE
    \item es_ES
    \item fr_FR
    \item jp_JP
    \item ko_KR
    \item zh_CN
    \item zh_TW
}

This function is a much faster way to get report suite settings, versus making calls in independent methods. The
list of methods this single method wraps per Adobe documentation is:

\itemize{
    \item ReportSuite.GetEcommerce
    \item ReportSuite.GetEvars
    \item ReportSuite.GetCorrelations
    \item ReportSuite.GetSuccessEvents
    \item ReportSuite.GetProps
    \item ReportSuite.GetClassifications
    \item ReportSuite.GetCustomCalendar
    \item ReportSuite.GetAvailableElements
    \item Report.GetMetrics
}

The information returned, however, implies that additional methods may be called, and furthermore, 
not all documented methods are in fact called by the 1.4 method. For example, 
\code{ReportSuite.GetAvailableElements} is a 1.3 method; there is no indication of this
method being called, in the return. Also, segments information is returned, even though the documentation
does not state \code{ReportSuite.GetSegments} is called.

There are 24 fields currently returned, namely (and in default return order): 

\preformatted{
rsid, site_title, ecommerce_level, 
ecommerce_visits, ecommerce_visitors, mobile_breakdowns, 
traffic_case_insensitive, activation, base_currency, 
base_url, element_classifications, calendar_type, 
default_page, discover_enabled, ip_obfuscation, 
localization, props, segments, 
time_zone, template, unique_visitor_variable, 
video_settings, elements, metrics
}
}
\note{
There is no error checking that prevents a single invalid report suite ID from causing the entire call to fail. You should 
handle exceptions if this might be a problem.

The segments returned by this function currently call the deprecated \code{ReportSuite.GetSegments} version. Thus, we may
address this in the future to swap the segment data using the (new) \code{Segments.Get} API method. 
See \code{\link{Segments_Get}}.

Classifications are returned in a slightly different structure (although the same data) versus a separate call to 
the classifications method. Check this by parsing the (classification) \code{data.frame} return 
using \code{\link{flatten_nested_df}} and comparing to \code{\link[RSiteCatalyst]{GetClassifications}}.
}
\section{Parsing}{

This is forthcoming. For the time being, these are both recommendations and TODO notes:

\enumerate{
\item Split the return row-wise to generate list of single-row \code{data.frame}s
\item \code{Filter} out atomic records; bind into a single table
\item Flatten \emph{classifications} using \code{\link{flatten_nested_df}}
\item Collapse \emph{mobile breakdowns} using \code{\link{collapse_simple_listcol}}
}
}

\examples{
\dontrun{
Get_Settings(c(rsid_1, rsid_2))
}
}
