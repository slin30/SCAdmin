% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flatten_container.R
\name{flatten_container}
\alias{flatten_container}
\title{flatten_container}
\usage{
flatten_container(x)
}
\arguments{
\item{x}{A single-row data.frame, generally the output from \code{\link{split_segment_ret}}}
}
\value{
A flattened segment definition
}
\description{
Flattens segment definition returns for non-nested containers
}
\details{
This does not work properly for nested containers, where "nested" is as defined in the GUI, 
and not in terms of the data structure from the call return. At the moment, it does not
error when encoutering such segments, but this will be addressed before public release.
}
\note{
This is temporarily being exported during development to facilitate abstraction. Might
be useful to export ultimately, with some tweaks. 

I suspect if this is to be exported, it should probably also bring in \code{\link{split_segment_ret}} and 
handle multi-row inputs using e.g. \code{Map()} or \code{lapply()}. 

At the moment, all this is doing is wrapping around the two (not-exported) functions:

\enumerate{
\item \code{\link{split_single_row_ret}}
\item \code{\link{recur_flatten_nested_container}}
}
}
\section{Note to self}{

May want to explicitly handle nested containers (as created in GUI) with a modified version 
of the current recursive (data structure) flattener that can handle both nested (as created in GUI)
and non-nested segments. If too messy, make two functions and branch the logic by detecting which
structure, since you are handling this row-wise, and not df-wise.
}

\examples{
#TBD
}
