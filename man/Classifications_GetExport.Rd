% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Classifications_GetExport.R
\name{Classifications_GetExport}
\alias{Classifications_GetExport}
\title{Get one or all pages from a complete export job}
\usage{
Classifications_GetExport(status_return = NULL, all_pages = TRUE,
  page = NULL, dontrun = FALSE)
}
\arguments{
\item{status_return}{(required) The return from a complete export job}

\item{all_pages}{(optional) Should all available pages be returned? Defaults to \code{TRUE}}

\item{page}{(optional) If provided, an integer vector denoting either a specific page
or a set of pages. Ignored if \code{all_pages} is \code{TRUE}}

\item{dontrun}{(optional) Mainly for testing purposes; only return the call body (bodies) -- 
do not make any requests to API endpoint.}
}
\value{
A named, nested \code{list} with as many elements as the number of pages
returned, for each \emph{file_id}. The (Each) first-level element will
be of length 3, with the following basic structure:

 \itemize{
 \item \code{warnings} A \code{logical} vector of length 1. \code{NA}
       if no warnings.
 \item \code{header} A \code{list} of length 1, the sub-element containing 
       the field names for the returned \code{data}
 \item \code{data} A \code{list} of length 1, the sub-element containing a
       nested \code{data.frame}. 
 } 
 
Each element is named using the \code{job_id}, \code{file_id}, and page number of the input
\emph{status_return}.
}
\description{
Get one or all pages from completed classification job export
}
\details{
\href{https://marketing.adobe.com/developer/documentation/classifications-1-4-saint/r-getexport}{Adobe 1.4 documentation}

The extends the basic functionality of the baseline method by allowing all possible \code{file_id} pages to be 
returned (default). Set the value of \emph{all_pages} to \code{FALSE} and leave the \emph{page} 
argument as \code{NULL} to reproduce the behavior of the default method (i.e. pull only the first page). 

If \code{all_pages=FALSE} AND a page value is supplied, the behavior of \code{page} is as follows:

\itemize{
\item If \code{<=0}, an error
\item If length > 1, all requested pages
\item If length == 1, the requested page
}

Furthermore, if the (any) value of \emph{page} is greater than the maximum value of the value specified within the,
\code{status_return}, the latter is used as the upper limit automatically, with a message.

In all cases, \code{page} values are de-duplicated and requested in the order provided, i.e. if the total number of 
pages is 5, and you request pages as \code{c(2,1,5)}, the returned page order will be \code{2,1,5}. 

\code{NA} values are not allowed for page, and will raise an error, even if this occurs during coercion (if needed) 
via \code{as.integer}.
}
\note{
The returned value is nested one additional level to ensure a consistent structure for single or multi-page
returns.
}
\section{Access Privileges}{
 
This function calls an Adobe Analytics method that requires administrative/elevated privileges for
some or all functionality.
}

\examples{
\dontrun{
# Create a dummy complete status_return
## Note that we have a max page length of 5
dummy_return <- data.frame(
 id = c(1L, 2L),
 type = c("job_id", "file_id"),
 viewable_pages = c(0L, 5L),
 status = c("Completed", "Ready"),
 stringsAsFactors = FALSE
)
# don't run live-- just view the calls that will be generated
Classifications_GetExport(dummy_return, dontrun = TRUE) # basic
Classifications_GetExport(dummy_return, dontrun = FALSE, page = 3) # single page
Classifications_GetExport(dummy_return, dontrun = FALSE, page = c(1,3,5)) # multiple pages
Classifications_GetExport(dummy_return, dontrun = FALSE, page = 1:10) # truncates to max of 5
}
}
\seealso{
Other Classifications methods: \code{\link{CheckExportJobStatus}},
  \code{\link{Classifications_CreateExport}},
  \code{\link{Classifications_GetElements}},
  \code{\link{Classifications_GetFilters}},
  \code{\link{Classifications_GetStatus}},
  \code{\link{Classifications_GetTemplate}},
  \code{\link{WriteTemplate}}
}
