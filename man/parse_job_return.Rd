% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_job_return.R
\name{parse_job_return}
\alias{parse_job_return}
\title{(Experimental) Parse a job export return}
\usage{
parse_job_return(xs, also_bind = TRUE, ...)
}
\arguments{
\item{xs}{(required) A nested \code{list}}

\item{also_bind}{(optional) Combine all pages into a \code{data.table}? 
Defaults to \code{TRUE}}

\item{...}{Additional argumnets to pass to \code{data/table::rbindlist}}
}
\value{
Depending on the input, either a \code{data.table} or a \code{list} of \code{data.table}s.
}
\description{
Parse the return from a call to Classifications.GetExport
}
\details{
This is an experimental parser for returns from e.g. \code{\link{Classifications_GetExport}}. 
For flexibility, one of two possible structures are permitted, roughly delimited by whether
the return has been run through \code{\link{split_multi_jobfile}}.

\itemize{
\item A non-nested return, from a single report suite       
\item A nested return, typically from more than one report suite, although single-report-suite
      returns processed by \code{split_multi_jobfile} would also fall into this categoty
}
}
\note{
The \emph{experimental} denomination refers to the fact that classifications can be hierarchical, 
and at the moment, this parser does not handle such situations. Furthermore, there is rather
limited input checking considering the number of likely (not yet fully understood) potential
return structures. 

\code{...}, while optional, should be used to preserve \code{job_id, file_id, page} information. 
Furthermore, consider using \code{fill=TRUE} if passing in returns from more than one report suite, 
as there is a high likelihood of different columns across suites. 

Finally, \code{NULL} values in multi-report-suite returns are possible, depending on how they
are processed. This is not handled at the moment, but their presence (along with zero-row returns)
will cause \code{rbindlist} to error.
}
\examples{
\dontrun{
# using \\code{...}
parse_job_return(x, use.names = TRUE, idcol = "ID")
}
}
\seealso{
Other Classifications methods: \code{\link{CheckExportJobStatus}},
  \code{\link{Classifications_CreateExport}},
  \code{\link{Classifications_GetElements}},
  \code{\link{Classifications_GetExport}},
  \code{\link{Classifications_GetFilters}},
  \code{\link{Classifications_GetStatus}},
  \code{\link{Classifications_GetTemplate}},
  \code{\link{WriteTemplate}},
  \code{\link{split_multi_jobfile}}
}
\concept{Classifications methods}
